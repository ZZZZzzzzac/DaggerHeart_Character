body {
    font-family: sans-serif;
    line-height: 1.6;
    margin: 20px;
    background-color: #f4f4f4;
    color: #333;
}

h1, h2, h3 {
    color: #333;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}

h2 {
    border-bottom: 1px solid #ddd;
    padding-bottom: 10px;
    margin-top: 30px;
}

form {
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

form > div:not(.form-group-inline-flex):not(.item-container) { /* Apply default margin only to non-inline groups */
    margin-bottom: 15px;
}

label {
    margin-bottom: 5px;
    font-weight: bold;
    margin-right: 5px; /* Add some space between label and input */
    vertical-align: middle; /* Align labels vertically */
}

input[type="text"],
input[type="number"],
textarea {
    padding: 8px; /* Slightly smaller padding */
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
    vertical-align: middle; /* Align inputs vertically */
    margin-right: 10px; /* Space between inputs */
    margin-bottom: 10px; /* Space below inputs if they wrap */
}

/* Default width for most inputs */
input[type="text"],
input[type="number"] {
    width: 150px;
}


textarea {
    width: calc(100% - 22px); /* Textareas usually need full width */
    min-height: 60px; /* Slightly smaller height */
    resize: vertical;
    display: block; /* Ensure textarea takes its own line */
    margin-top: 5px;
}

input[type="checkbox"] {
    margin-right: 5px;
    vertical-align: middle;
    width: auto; /* Checkboxes don't need fixed width */
}

/* --- Inline Group Styles --- */
.form-group-row {
    display: flex;
    flex-wrap: wrap; /* Allow items to wrap if needed, though ideally they fit on one line */
    align-items: center; /* Align items vertically within the row */
    margin-bottom: 10px; /* Space below each row */
    gap: 10px 15px; /* Row gap (if wrapping), Column gap between items */
}

.form-group-row > div { /* Each item (label + input pair) in the row */
    display: flex;
    align-items: center; /* Align label and input within the pair */
    margin-bottom: 0; /* No margin below individual items, row handles spacing */
}

.form-group-row label {
    width: auto;
    margin-bottom: 0;
    white-space: nowrap;
}

.form-group-row input[type="text"],
.form-group-row input[type="number"],
.form-group-row select {
    width: 120px; /* Default width for inputs/selects in these rows */
    margin-right: 0;
    margin-bottom: 0;
    padding: 6px;
    box-sizing: border-box;
}

.form-group-row input[type="number"] {
    width: 80px; /* Slightly smaller for numbers */
}


.form-group-inline-flex {
    display: flex;
    flex-wrap: wrap; /* Allow items to wrap to next line */
    align-items: center; /* Align items vertically */
    margin-bottom: 10px;
    gap: 5px 15px; /* Row gap, Column gap */
}

.form-group-inline-flex > div {
    display: flex; /* Make label and input flex items */
    align-items: center; /* Align label and input */
    margin-bottom: 5px; /* Space below each pair if wrapping */
}


.form-group-inline-flex label {
     width: auto; /* Allow label width to adjust */
     margin-bottom: 0; /* Remove bottom margin for inline labels */
     white-space: nowrap; /* Prevent label text wrapping */
}

.form-group-inline-flex input[type="text"],
.form-group-inline-flex input[type="number"] {
    width: 100px; /* Smaller width for inline inputs */
    margin-right: 0; /* Remove right margin, use gap instead */
    margin-bottom: 0; /* Remove bottom margin */
}

/* Story and Appearance Group */
.story-appearance-group {
    display: flex;
    gap: 20px; /* Space between story and appearance sections */
    margin-bottom: 15px;
}

.story-group {
    flex: 1; /* Allow story to take available space */
}

.story-group textarea {
    width: 100%; /* Make textarea take full width of its container */
    min-height: 150px; /* Give it a decent default height */
}

.appearance-group {
    flex: 1; /* Allow appearance to take available space */
    display: flex;
    flex-direction: column; /* Stack label, input, and image vertically */
}

.appearance-group label {
    margin-bottom: 5px;
}

.appearance-group input[type="file"] {
    width: 100%; /* Make file input take full width */
    margin-bottom: 10px;
}

#appearancePreview {
    border: 1px solid #ddd;
    object-fit: cover; /* Or 'contain' depending on desired preview behavior */
}

.image-preview-container {
    position: relative; /* For positioning the remove button */
    display: inline-block; /* To wrap the image and button snugly */
}

.remove-image-btn {
    position: absolute;
    top: 2px;
    right: 2px;
    background-color: rgba(255, 255, 255, 0.7);
    color: #333;
    border: 1px solid #ccc;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 14px;
    line-height: 18px; /* Adjust for vertical centering */
    text-align: center;
    cursor: pointer;
    font-weight: bold;
}

.remove-image-btn:hover {
    background-color: rgba(200, 200, 200, 0.9);
}


/* Specific width adjustments for general inline inputs */
.form-group-inline-flex input[type="number"] { /* More specific selector for numbers in these groups */
    width: 60px;
}

/* Specific width adjustments for individual IDs if still needed */
#age, #strength, #agility, #dexterity, #instinct, #knowledge, #grace,
#armorValue, #level, #proficiency, #money,
#weaponDamage1, #armorDefense1, #skillLevel1 {
    width: 60px; /* Even smaller width for number inputs */
}

#itemQuantity1 {
    width: 80px;
}

/* Styles for "Current / Max" status fields */
.form-group-inline-flex > div > input[name$="Current"],
.form-group-inline-flex > div > input[name$="Max"] {
    width: 50px !important; /* Ensure these are very small, override more general rules */
    margin-right: 2px !important; /* Minimal space before separator */
    margin-left: 2px !important;  /* Minimal space after separator */
}

.status-separator {
    margin-left: 2px;
    margin-right: 2px;
    vertical-align: middle;
}


/* --- Item Container Styles --- */
.item-container {
    margin-bottom: 20px; /* Space below item sections */
}

/* Specific styling for the experiences container to lay out experience items horizontally */
#experiences.item-container {
    display: flex;
    flex-wrap: wrap; /* Allow items to wrap to the next line if space is insufficient */
    gap: 2px;       /* Spacing between individual experience items */
}

.experience-item,
.item {
    border: 1px solid #eee;
    padding: 2px; /* Reduced padding */
    margin-bottom: 2px; /* Reduced margin */
    border-radius: 4px;
    background-color: #f9f9f9;
    display: flex; /* Use flexbox for inline items */
    flex-wrap: wrap;
    align-items: center;
    gap: 5px 10px; /* Row gap, Column gap */
}

.experience-item > *, /* Target direct children */
.item > * { /* Target direct children */
    margin-bottom: 5px; /* Add some space below items if they wrap */
}


.experience-item label,
.item label {
    margin-right: 5px;
    width: auto;
    font-weight: normal; /* Less emphasis for item labels */
    margin-bottom: 0;
}

.experience-item input[type="text"],
.item input[type="text"] { /* General text inputs in items */
    width: auto; /* Default auto width */
    flex-grow: 1; /* Allow inputs to grow */
    min-width: 100px; /* Minimum width for general text */
    margin-right: 5px;
    margin-bottom: 0;
    padding: 5px;
}

.experience-item input[name^="expKeyword"] {
    width: auto; /* Specific width for keyword */
    flex-grow: 0; /* Don't allow keyword to grow excessively */
    min-width: 120px;
}

.experience-item input[name^="expValue"] {
    width: 60px;  /* Specific width for adjustment value (assuming it's text for now as per HTML) */
    flex-grow: 0;
    min-width: 60px;
}

.item input[type="number"], /* General number inputs in items */
.experience-item input[type="number"] { /* If expValue becomes number type */
    width: 50px; /* Specific width for numbers in items, including expValue */
    flex-grow: 0;
    min-width: 40px; /* Adjusted min-width */
    margin-right: 5px;
    margin-bottom: 0;
    padding: 5px;
}

.item textarea { /* Textareas in items */
    width: auto; /* Default auto width */
    flex-grow: 1;
    min-width: 80px;
    margin-right: 5px;
    margin-bottom: 0;
    padding: 5px;
}


/* Specific widths within general .item (not .experience-item unless overridden) */

/* New Weapons Section Layout */
.weapons-section {
    margin-bottom: 0px;
}

.weapons-layout {
    display: flex;
    flex-direction: column; /* Stack weapon1 and weapon2 vertically */
    gap: 0px; /* Space between weapon1 and weapon2 boxes */
}

.weapon-item-container {
    padding: 0px 0; /* Reduced padding, only top/bottom for separation between weapon1/2 */
    margin-bottom: 0px; /* Add a small margin below each weapon line */
}

.weapon-item-container .item {
    flex-wrap: nowrap; /* Prevent wrapping to ensure single line */
    gap: 0px 0px; /* Reduced column gap for tighter packing, row gap 0 */
}

.weapon-item-container .item h4 {
    margin: 0 5px 0 0; /* Reduced right margin */
    padding-bottom: 0;
    color: #333;
    font-size: 1em;
    font-weight: bold;
    border-bottom: none;
    align-self: center;
    white-space: nowrap;
    flex-shrink: 0;
}

.weapon-item-container .item label {
    margin-right: 2px; /* Tighter spacing to input */
    font-weight: normal;
    white-space: nowrap;
    flex-shrink: 0;
    padding-bottom: 0; /* Align with input baseline */
    margin-bottom: 0; /* Override general label margin */
}

/* Weapon Item Specific Styles - Widths for Single Line */
.weapon-item-container .item input[type="text"],
.weapon-item-container .item input[type="checkbox"] {
    margin-right: 2px;
    margin-bottom: 0;
    padding: 4px; /* Slightly reduced padding for tighter fit */
    flex-shrink: 0;
    border-radius: 3px; /* Slightly smaller radius */
    font-size: 0.9em; /* Slightly smaller font for more content */
}

.weapon-item-container .item input[name^="weaponName"] {
    width: 50px;
}
.weapon-item-container .item input[name^="weaponCheck"] {
    width: 40px;
    min-width: 40px; /* Explicitly set min-width */
    flex-basis: 40px; /* Set flex-basis */
    flex-grow: 0;
    flex-shrink: 0;
}
.weapon-item-container .item input[name^="weaponAttribute"] {
    width: 40px;
    min-width: 40px; /* Explicitly set min-width */
    flex-basis: 40px; /* Set flex-basis */
    flex-grow: 0;
    flex-shrink: 0;
}
.weapon-item-container .item input[name^="weaponRange"] {
    width: 50px;
    min-width: 50px; /* Explicitly set min-width */
    flex-basis: 50px; /* Set flex-basis */
    flex-grow: 0;
    flex-shrink: 0;
}
.weapon-item-container .item input[name^="weaponDamage"] {
    width: 80px;
    min-width: 80px; /* Explicitly set min-width */
    flex-basis: 80px; /* Set flex-basis */
    flex-grow: 0;
    flex-shrink: 0;
}
.weapon-item-container .item input[name^="weaponTwoHanded"] {
    width: 40px;
    min-width: 40px; /* Explicitly set min-width */
    flex-basis: 40px; /* Set flex-basis */
    flex-grow: 0;
    flex-shrink: 0;
}
.weapon-item-container .item input[name^="weaponTrait"] {
    width: 50px;
}

/* Armor Item Specific Styles - Widths for Single Line */
.armor-item-container .item {
    flex-wrap: nowrap; /* Ensure single line for armor as well */
    gap: 0px 5px; /* Consistent gap */
}

.armor-item-container .item h4 {
    margin: 0 5px 0 0;
    padding-bottom: 0;
    color: #333;
    font-size: 1em;
    font-weight: bold;
    border-bottom: none;
    align-self: center;
    white-space: nowrap;
    flex-shrink: 0;
}

.armor-item-container .item input[type="text"] {
    margin-right: 2px;
    margin-bottom: 0;
    padding: 4px;
    flex-shrink: 0;
    border-radius: 3px;
    font-size: 0.9em;
}

#armorName1 {
    width: 120px; /* Slightly more space for armor name */
}
#armorDefense1 {
    width: 60px;
}
#armorMajorThreshold1 {
    width: 70px;
}
#armorSevereThreshold1 {
    width: 70px;
}
 
/* Item (道具) Specific Styles */
#items .item select[name="itemName"] {
    width: 15em; /* Approx 10 CJK characters, adjust as needed */
    min-width: 12em;
    flex-grow: 0;
    flex-shrink: 0;
    margin-right: 5px;
}

#items .item input[name^="itemQuantity"] {
    width: 3.5em; /* Approx 2-3 digits */
    min-width: 3em;
    flex-grow: 0;
    flex-shrink: 0; /* Ensure quantity doesn't shrink */
    margin-right: 5px;
}

#items .item textarea[name="itemDescription"] {
    flex-grow: 1; /* Allow description to take remaining space */
    width: auto;  /* Let flexbox determine width */
    min-width: 100px; /* Minimum reasonable width */
    min-height: 2.2em; /* Enough for a single line of text initially */
    resize: none;
    overflow: hidden; /* JS will handle height */
    padding: 5px;
    margin-right: 5px; /* Space before remove button */
    box-sizing: border-box;
}



/* --- Two Column Layout --- */
.two-column-layout {
    display: flex;
    gap: 20px; /* Space between columns */
}

.left-column {
    flex: 1; /* Left column takes up 2 parts of the space */
}

.right-column {
    flex: 1; /* Right column takes up 1 part of the space */
}

/* Ensure h2 margins are consistent within columns */
.left-column h2, .right-column h2 {
    margin-top: 0; /* Remove top margin for the first h2 in a column */
}
.left-column > h2:first-of-type, .right-column > h2:first-of-type {
    margin-top: 0;
}

/* Styles for section headers with add buttons */
.section-header {
    display: flex;
    align-items: center;
    margin-bottom: 10px; /* Space below header before items */
}

.job-domains-display {
    margin-left: auto; /* Push to the right within the flex container */
    text-align: right; /* Align text to the right within its own bounds */
    font-size: 0.9em;
    color: #555;
    padding-left: 15px; /* Space from the add button */
    white-space: nowrap; /* Prevent wrapping if possible */
    align-self: center; /* Vertically align with h3 and button */
}

.job-domains-display {
    margin-left: auto; /* Push to the right within the flex container */
    text-align: right; /* Align text to the right within its own bounds */
    font-size: 0.9em;
    color: #555;
    padding-left: 15px; /* Space from the add button */
    white-space: nowrap; /* Prevent wrapping if possible */
}

.section-header h3 {
    margin: 0 10px 0 0; /* Remove default h3 margins and add space to the right */
    padding-bottom: 0; /* Remove padding if any from general h3 */
    border-bottom: none; /* Remove border if any from general h3 */
}

.add-btn {
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 50%; /* Make it circular */
    width: 24px;
    height: 24px;
    font-size: 16px;
    line-height: 22px; /* Adjust for vertical centering of + */
    text-align: center;
    cursor: pointer;
    padding: 0;
    margin-left: 5px; /* Space from the h3 title */
}

.add-btn:hover {
    background-color: #0056b3;
}

.remove-item-btn {
    background-color: #dc3545;
    color: white;
    border: none;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 12px;
    line-height: 18px; /* Adjust for vertical centering */
    text-align: center;
    cursor: pointer;
    padding: 0;
    margin-left: 10px; /* Space from other item elements */
    font-weight: bold;
}

.remove-item-btn:hover {
    background-color: #c82333;
}


/* Form Actions (Import/Export Buttons) */
.form-actions {
    margin-top: 30px;
    display: flex;
    gap: 10px; /* Space between buttons */
    justify-content: flex-start; /* Align buttons to the start */
}

.form-actions button { /* General style for buttons in this container */
    width: 150px;
    padding: 10px 15px;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    /* margin-top is removed as .form-actions handles top margin */
}

button[type="button"]#exportJson {
    background-color: #5cb85c;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button[type="button"]#importJsonBtn {
    background-color: #007bff;
}

button[type="button"]#exportJson:hover {
    background-color: #4cae4c;
}
button[type="button"]#importJsonBtn:hover {
    background-color: #0056b3;
}

.job-domains-display {
    text-align: right;
    margin-top: 10px; /* Add some space above */
    font-size: 0.9em;
    color: #555;
    padding-right: 10px; /* Align with skill table content area */
}

